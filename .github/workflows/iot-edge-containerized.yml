name: Automation Script

on: [push]

jobs:
  pipeline:
    name: Pipeline
    runs-on: ubuntu-20.04
    env:
      DOCKERHUB_USER: ${{ github.actor }}
    steps:
      - name: Initiating
        uses: actions/checkout@v1
      - name: QEMU
        uses: docker/setup-qemu-action@v1
      - name: Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Building
        run: |
          cd iot-edge-containerized
          docker buildx build --platform linux/amd64 -t azure-iot-edge-amd64 -f amd64.Dockerfile .
          docker buildx build --platform linux/arm/v7 -t azure-iot-edge-armv7hf -f armv7hf.Dockerfile .
          docker tag azure-iot-edge-amd64 $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}-amd64
          docker tag azure-iot-edge-armv7hf $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}-armv7hf
          docker tag azure-iot-edge-amd64 $DOCKERHUB_USER/azure-iot-edge:latest-amd64
          docker tag azure-iot-edge-armv7hf $DOCKERHUB_USER/azure-iot-edge:latest-armv7hf
      - name: Authorizing
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publishing
        run: |
          docker push $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}-amd64
          docker push $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}-armv7hf
          docker manifest create $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8} $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}-amd64 $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}-armv7hf
          docker manifest push --purge $DOCKERHUB_USER/azure-iot-edge:${GITHUB_SHA::8}
          docker push $DOCKERHUB_USER/azure-iot-edge:latest-amd64
          docker push $DOCKERHUB_USER/azure-iot-edge:latest-armv7hf
          docker manifest create $DOCKERHUB_USER/azure-iot-edge:latest $DOCKERHUB_USER/azure-iot-edge:latest-amd64 $DOCKERHUB_USER/azure-iot-edge:latest-armv7hf
          docker manifest push --purge $DOCKERHUB_USER/azure-iot-edge:latest

